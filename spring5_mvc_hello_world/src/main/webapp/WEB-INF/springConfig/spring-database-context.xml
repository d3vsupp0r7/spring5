<?xml version="1.0" encoding="UTF-8"?>

<beans
	xsi:schemaLocation=" http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx 
	 http://www.springframework.org/schema/tx/spring-tx.xsd 
	 http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
	 http://www.springframework.org/schema/jdbc https://www.springframework.org/schema/jdbc/spring-jdbc.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/beans">

	<!-- DB Configuration parameters on properties -->		
	<context:property-placeholder
		location="classpath:application.properties,
		 classpath:dbConnection-#{environment.getActiveProfiles()[0]}-sql.properties,
         classpath:springBeans.properties"
		ignore-unresolvable="false" />

	<!-- 0 Standard bean definition -->

	<!-- 1. Autoscan for service -->
	<context:component-scan
		base-package="org.lba.spring5">
	</context:component-scan>
	<!-- 2. Database configuration -->
	<!-- 2.1 JPA Repository -->
	<jpa:repositories
		base-package="org.lba.spring5.db.repository" />
	<tx:annotation-driven />
	<tx:jta-transaction-manager />
	<!-- 2.2 DataSource definition -->
	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="datasource">
		<property value="${db.connection.driver_class}"
			name="driverClassName" />
		<property value="${jdbc.connection.url}" name="url" />
		<property value="${db.connection.username}" name="username" />
		<property value="${db.connection.password}" name="password" />
	</bean>
	
	<!-- 2.3 Transaction manager -->
	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
	
	<!-- Context listener -->
	<bean id="eventListenerBean"
		class="org.lba.spring5.config.ApplicationListenerBean"></bean>
		
	<!-- H2 Profile with initial load of data -->
	<beans profile="h2">
		<bean
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			id="entityManagerFactory">

			<property name="dataSource" ref="datasource" />
			<property value="${model.entity.package}"
				name="packagesToScan" />
			<property name="jpaVendorAdapter">
				<bean
					class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="jpaProperties">

				<props>
					<prop key="hibernate.dialect">${hibernate.dialect.config}</prop>
					<!-- Create initial load based on sql scripts -->
				    <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto.config}</prop>
					<prop key="hibernate.hbm2ddl.import_files">${hibernate.hbm2ddl.import_files}</prop>

					<prop key="hibernate.show_sql">${hibernate.show_sql.config}</prop>
					<prop key="hibernate.format_sql">${hibernate.format_sql.config}</prop>

					<prop key="hibernate.id.new_generator_mappings">${hibernate.id.new_generator_mappings}</prop>
				</props>
			</property>
		</bean>

		<!-- H2 WebConsole configuration -->
		<!-- Run H2 web server within application that will access the same in-memory 
			database -->
		<bean id="h2Server" class="org.h2.tools.Server"
			factory-method="createTcpServer" init-method="start"
			destroy-method="stop" depends-on="h2WebServer">
			<constructor-arg
				value="-tcp,-tcpAllowOthers,-tcpPort,9093" />
		</bean>
		<bean id="h2WebServer" class="org.h2.tools.Server"
			factory-method="createWebServer" init-method="start"
			destroy-method="stop">
			<constructor-arg
				value="-web,-webAllowOthers,-webPort,9011" />
		</bean>

	</beans>

</beans>